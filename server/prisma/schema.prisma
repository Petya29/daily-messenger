// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String                 @id @default(uuid())
  nickname             String
  email                String                 @unique
  password             String
  role                 Role                   @default(USER)
  isActivated          Boolean                @default(false)
  activationLink       String?
  region               String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @default(now()) @updatedAt
  refreshToken         Token[]
  messages             Message[]
  ConversationsOnUsers ConversationsOnUsers[]
}

model Token {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt

  @@index([userId])
}

model Conversation {
  id                   String                 @id @default(uuid())
  messages             Message[]
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @default(now()) @updatedAt
  ConversationsOnUsers ConversationsOnUsers[]
}

model ConversationsOnUsers {
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt

  @@id([userId, conversationId])
}

model Message {
  id             String       @id @default(uuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  text           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
}

enum Role {
  USER
  ADMIN
}
